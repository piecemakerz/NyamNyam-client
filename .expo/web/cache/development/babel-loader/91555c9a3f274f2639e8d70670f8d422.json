{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(rootSaga),\n    _marked2 = _regeneratorRuntime.mark(resourceApi1Saga);\n\nimport { combineReducers } from 'redux';\nimport signup, { signupSaga } from \"./signup\";\nimport signin, { signinSaga } from \"./signin\";\nimport { all, fork } from 'redux-saga/effects';\nimport { createAuthCheckSaga } from \"../lib/auth\";\nvar rootReducer = combineReducers({\n  signin: signin,\n  signup: signup\n});\nvar actions = [];\nvar sagas = [];\nvar fakeActions = ['TEST1', 'TEST2', 'TEST3'];\nvar fakeSagas = [_regeneratorRuntime.mark(function test1(action) {\n  return _regeneratorRuntime.wrap(function test1$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('test1: ', action);\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, test1);\n}), _regeneratorRuntime.mark(function test2(action) {\n  return _regeneratorRuntime.wrap(function test2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('test1: ', action);\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, test2);\n}), _regeneratorRuntime.mark(function test3(action) {\n  return _regeneratorRuntime.wrap(function test3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('test1: ', action);\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, test3);\n})];\nvar resourceAuthCheckSaga = createAuthCheckSaga();\nexport function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([signinSaga(), signupSaga(), resourceAuthCheckSaga(fakeActions, fakeSagas)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked);\n}\nexport default rootReducer;\n\nfunction resourceApi1Saga(action) {\n  return _regeneratorRuntime.wrap(function resourceApi1Saga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.t0 = action.type;\n          _context8.next = _context8.t0 === 'TEST1' ? 3 : _context8.t0 === 'TEST2' ? 6 : _context8.t0 === 'TEST3' ? 9 : 12;\n          break;\n\n        case 3:\n          _context8.next = 5;\n          return fork(_regeneratorRuntime.mark(function test1() {\n            return _regeneratorRuntime.wrap(function test1$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, test1);\n          }));\n\n        case 5:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 6:\n          _context8.next = 8;\n          return fork(_regeneratorRuntime.mark(function test2() {\n            return _regeneratorRuntime.wrap(function test2$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, test2);\n          }));\n\n        case 8:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 9:\n          _context8.next = 11;\n          return fork(_regeneratorRuntime.mark(function test3() {\n            return _regeneratorRuntime.wrap(function test3$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, test3);\n          }));\n\n        case 11:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/modules/index.ts"],"names":["rootSaga","resourceApi1Saga","combineReducers","signup","signupSaga","signin","signinSaga","all","fork","createAuthCheckSaga","rootReducer","actions","sagas","fakeActions","fakeSagas","test1","action","console","log","test2","test3","resourceAuthCheckSaga","type"],"mappings":";;uCA6CiBA,Q;wCAwCPC,gB;;AArFV,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,UAAjB;AACA,OAAOC,MAAP,IAAiBC,UAAjB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA2C,oBAA3C;AAEA,SAASC,mBAAT;AAEA,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCG,EAAAA,MAAM,EAANA,MADkC;AAElCF,EAAAA,MAAM,EAANA;AAFkC,CAAD,CAAnC;AAQA,IAAMQ,OAAO,GAAG,EAAhB;AAUA,IAAMC,KAAK,GAAG,EAAd;AAMA,IAAMC,WAAW,GAAG,CAClB,OADkB,EAElB,OAFkB,EAGlB,OAHkB,CAApB;AAMA,IAAMC,SAAS,GAAG,0BAChB,SAAUC,KAAV,CAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAA8BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUD,KAAV;AAAA,CADgB,4BAEhB,SAAUI,KAAV,CAAgBH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAA8BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUG,KAAV;AAAA,CAFgB,4BAGhB,SAAUC,KAAV,CAAgBJ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAA8BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUI,KAAV;AAAA,CAHgB,EAAlB;AAMA,IAAMC,qBAAqB,GAAGZ,mBAAmB,EAAjD;AAEA,OAAO,SAAUT,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMO,GAAG,CAAC,CAACD,UAAU,EAAX,EAAeF,UAAU,EAAzB,EAA6BiB,qBAAqB,CAACR,WAAD,EAAcC,SAAd,CAAlD,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,eAAeJ,WAAf;;AAkCA,SAAUT,gBAAV,CAA2Be,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,yBACSA,MAAM,CAACM,IADhB;AAAA,4CAES,OAFT,wBAIS,OAJT,wBAMS,OANT;AAAA;;AAAA;AAAA;AAGa,iBAAMd,IAAI,0BAAE,SAAUO,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,KAAV;AAAA,WAAF,EAAV;;AAHb;AAAA;;AAAA;AAAA;AAKa,iBAAMP,IAAI,0BAAE,SAAUW,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,KAAV;AAAA,WAAF,EAAV;;AALb;AAAA;;AAAA;AAAA;AAOa,iBAAMX,IAAI,0BAAE,SAAUY,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,KAAV;AAAA,WAAF,EAAV;;AAPb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { combineReducers } from 'redux';\nimport signup, { signupSaga } from './signup';\nimport signin, { signinSaga } from './signin';\nimport { all, fork, take, takeEvery } from 'redux-saga/effects';\n\nimport { createAuthCheckSaga } from '@base/lib/auth';\n\nconst rootReducer = combineReducers({\n  signin,\n  signup,\n});\n\n//actions에는 각 modules에 있는 action들을 배열로 담아서 import한 다음에 추가해준다\n\n//import { resourceActionTypes } from '@base/modules/resource\nconst actions = [\n  //...resourceActionTypes\n  //...resourceActionsTypes2\n  //...\n];\n\n\n//sagas에는 각 모듈에 있는 saga를 import해서 배열에 추가해준다.\n\n//import { resourceSaga } from '@base/modules/resource\nconst sagas = [\n  //resourceSaga,\n  //resourceSaga2\n  //...\n];\n\nconst fakeActions = [\n  'TEST1',\n  'TEST2',\n  'TEST3'\n];\n\nconst fakeSagas = [\n  function* test1(action: any){ console.log('test1: ', action) },\n  function* test2(action: any){ console.log('test1: ', action) },\n  function* test3(action: any){ console.log('test1: ', action) },\n];\n\nconst resourceAuthCheckSaga = createAuthCheckSaga()\n\nexport function* rootSaga() {\n  yield all([signinSaga(), signupSaga(), resourceAuthCheckSaga(fakeActions, fakeSagas)]); // all은 배열 안의 여러 사가를 동시에 실행시켜준다.\n}\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n\n//function* testSaga(){\n//  yield all([signinSaga(), signupSaga(), authCheckSaga()]);\n//}\n//\n//const actions = [\n//  'TEST1',\n//  'TEST2',\n//  'TEST3',\n//  'TEST4',\n//  'TEST5',\n//  'TEST6',\n//  'TEST7',\n//  'TEST8',\n//  'TEST9'\n//];\n//\n//return function* authChekSaga(){\n//            \n//  while(true){\n//      const action = yield take(actions);\n//      console.log('saga action: ', action);\n//\n//      const isTokenValid = yield call(checkToken);\n//      if(isTokenValid && ){\n//          for(let i = 0; i < sagas.length; i++){\n//              //사가에서 api요청 보낼 때 헤더에 access token 추가\n//              yield fork(sagas[i], action);  \n//          }\n//      }\n//  }\n//};\n//\nfunction* resourceApi1Saga(action: any){\n  switch(action.type){\n    case 'TEST1':\n      return yield fork( function* test1(){ });\n    case 'TEST2':\n      return yield fork( function* test2(){ });\n    case 'TEST3':\n      return yield fork( function* test3(){ });  \n  }\n}\n\n//function* resourceApi2Saga(){\n//  yield takeEvery('TEST4', function* test1(){ });\n//  yield takeEvery('TEST5', function* test2(){ });\n//  yield takeEvery('TEST6', function* test3(){ });\n//}\n\n//function* resourceApi3Saga(){\n//  yield takeEvery('TEST7', function* test1(){ });\n//  yield takeEvery('TEST8', function* test2(){ });\n//  yield takeEvery('TEST9', function* test3(){ });\n//}"]},"metadata":{},"sourceType":"module"}
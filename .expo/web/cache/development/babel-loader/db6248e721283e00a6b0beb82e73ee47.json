{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { WEATHER_API_KEY } from \"./config\";\nexport var getStoreByKeyword = function getStoreByKeyword(_ref) {\n  var keyword, coords, cafeResults;\n  return _regeneratorRuntime.async(function getStoreByKeyword$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          keyword = _ref.keyword, coords = _ref.coords;\n          _context.prev = 1;\n\n          if (coords) {\n            _context.next = 4;\n            break;\n          }\n\n          throw new Error('no coord provided');\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(\"https://dapi.kakao.com/v2/local/search/keyword.json?query=\" + encodeURIComponent(keyword) + \"&x=\" + coords.x + \"&y=\" + coords.y, {\n            headers: {\n              Authorization: 'KakaoAK 00bb9e39dfdc4d620c37f49660ac625a'\n            }\n          }));\n\n        case 6:\n          cafeResults = _context.sent;\n          return _context.abrupt(\"return\", cafeResults.data.documents);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          throw new Error(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 10]], Promise);\n};\nexport var getOpenWeather = function getOpenWeather(_ref2) {\n  var x, y, weatherResult, _weatherResult$data, current, dailyArr, daily;\n\n  return _regeneratorRuntime.async(function getOpenWeather$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          x = _ref2.x, y = _ref2.y;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + x + \"&lon=\" + y + \"&exclude=minutely,hourly,alerts&appid=\" + WEATHER_API_KEY + \"&units=metric\"));\n\n        case 3:\n          weatherResult = _context2.sent;\n          _weatherResult$data = weatherResult.data, current = _weatherResult$data.current, dailyArr = _weatherResult$data.daily;\n          daily = dailyArr.map(function (day) {\n            return {\n              temp: day.temp.day,\n              weather: day.weather[0]\n            };\n          });\n          return _context2.abrupt(\"return\", {\n            current: {\n              temp: current.temp,\n              weather: current.weather[0]\n            },\n            daily: daily\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/api.ts"],"names":["axios","WEATHER_API_KEY","getStoreByKeyword","keyword","coords","Error","get","encodeURIComponent","x","y","headers","Authorization","cafeResults","data","documents","getOpenWeather","weatherResult","current","dailyArr","daily","map","day","temp","weather"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,eAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,UAAAA,OAD+B,QAC/BA,OAD+B,EAE/BC,MAF+B,QAE/BA,MAF+B;AAAA;;AAAA,cAKxBA,MALwB;AAAA;AAAA;AAAA;;AAAA,gBAMrB,IAAIC,KAAJ,CAAU,mBAAV,CANqB;;AAAA;AAAA;AAAA,2CAQHL,KAAK,CAACM,GAAN,gEACqCC,kBAAkB,CAC7EJ,OAD6E,CADvD,WAGjBC,MAAM,CAACI,CAHU,WAGHJ,MAAM,CAACK,CAHJ,EAIxB;AACEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE;AADR;AADX,WAJwB,CARG;;AAAA;AAQvBC,UAAAA,WARuB;AAAA,2CAmBtBA,WAAW,CAACC,IAAZ,CAAiBC,SAnBK;;AAAA;AAAA;AAAA;AAAA,gBAqBvB,IAAIT,KAAJ,aArBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAyBP,OAAO,IAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5BP,UAAAA,CAD4B,SAC5BA,CAD4B,EAE5BC,CAF4B,SAE5BA,CAF4B;AAAA;AAAA,2CAIAT,KAAK,CAACM,GAAN,0DAC6BE,CAD7B,aACsCC,CADtC,8CACgFR,eADhF,mBAJA;;AAAA;AAItBe,UAAAA,aAJsB;AAAA,gCAQSA,aAAa,CAACH,IARvB,EAQpBI,OARoB,uBAQpBA,OARoB,EAQJC,QARI,uBAQXC,KARW;AAStBA,UAAAA,KATsB,GASdD,QAAQ,CAACE,GAAT,CAAa,UAACC,GAAD;AAAA,mBAAU;AACnCC,cAAAA,IAAI,EAAED,GAAG,CAACC,IAAJ,CAASD,GADoB;AAEnCE,cAAAA,OAAO,EAAEF,GAAG,CAACE,OAAJ,CAAY,CAAZ;AAF0B,aAAV;AAAA,WAAb,CATc;AAAA,4CAcrB;AACLN,YAAAA,OAAO,EAAE;AACPK,cAAAA,IAAI,EAAEL,OAAO,CAACK,IADP;AAEPC,cAAAA,OAAO,EAAEN,OAAO,CAACM,OAAR,CAAgB,CAAhB;AAFF,aADJ;AAKLJ,YAAAA,KAAK,EAALA;AALK,WAdqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import axios from 'axios';\nimport { AddressAPIProps, AddressAPIResult } from '@base/types/api';\nimport { WeatherAPIResults } from '@base/types/api';\nimport { Coords } from '@base/types/defaultTypes';\nimport { WEATHER_API_KEY } from './config';\n\nexport const getStoreByKeyword = async ({\n  keyword,\n  coords,\n}: AddressAPIProps): Promise<AddressAPIResult> => {\n  try {\n    if (!coords) {\n      throw new Error('no coord provided');\n    }\n    const cafeResults = await axios.get(\n      `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(\n        keyword\n      )}&x=${coords.x}&y=${coords.y}`,\n      {\n        headers: {\n          Authorization: 'KakaoAK 00bb9e39dfdc4d620c37f49660ac625a',\n        },\n      }\n    );\n\n    return cafeResults.data.documents;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getOpenWeather = async ({\n  x,\n  y,\n}: Coords): Promise<WeatherAPIResults> => {\n  const weatherResult = await axios.get(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${x}&lon=${y}&exclude=minutely,hourly,alerts&appid=${WEATHER_API_KEY}&units=metric`\n  );\n\n  const { current, daily: dailyArr } = weatherResult.data;\n  const daily = dailyArr.map((day) => ({\n    temp: day.temp.day,\n    weather: day.weather[0],\n  }));\n\n  return {\n    current: {\n      temp: current.temp,\n      weather: current.weather[0],\n    },\n    daily,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Signin/containers/Signin.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SigninScreen from \"../components/SigninScreen\";\nimport { initializeSignin, requestSignin, signinError } from \"../../../modules/signin\";\nimport { ErrorMsg, ErrorText } from \"../../../styles\";\nimport Loading from \"../../../components/loading\";\nexport default function Signin(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _route$params = route.params,\n      title = _route$params.title,\n      service = _route$params.service,\n      initial = _route$params.initial;\n\n  var _useSelector = useSelector(function (state) {\n    return state.signin;\n  }),\n      error = _useSelector.error,\n      loading = _useSelector.loading;\n\n  var dispatch = useDispatch();\n\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n  };\n\n  var handleSigninPress = function handleSigninPress() {\n    if (email.length === 0 || password.length === 0) {\n      dispatch(signinError('아이디 또는 비밀번호를 입력해주세요.'));\n      return;\n    }\n\n    var signinInfo = {\n      email: email,\n      password: password\n    };\n    dispatch(requestSignin(signinInfo));\n  };\n\n  var handleSignupPress = function handleSignupPress() {\n    navigation.navigate('Signup');\n  };\n\n  useEffect(function () {\n    var initializeWhenFirstSignin = function initializeWhenFirstSignin() {\n      if (initial) {\n        dispatch(initializeSignin(service));\n      }\n    };\n\n    initializeWhenFirstSignin();\n  }, []);\n  return React.createElement(React.Fragment, null, loading ? React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, error ? React.createElement(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, error)) : null, React.createElement(SigninScreen, {\n    title: title,\n    email: email,\n    password: password,\n    handleEmailChange: handleEmailChange,\n    handlePasswordChange: handlePasswordChange,\n    handleSignupPress: handleSignupPress,\n    handleSigninPress: handleSigninPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Signin/containers/Signin.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","SigninScreen","initializeSignin","requestSignin","signinError","ErrorMsg","ErrorText","Loading","Signin","route","navigation","email","setEmail","password","setPassword","params","title","service","initial","state","signin","error","loading","dispatch","handleEmailChange","text","handlePasswordChange","handleSigninPress","length","signinInfo","handleSignupPress","navigate","initializeWhenFirstSignin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SigninProps } from '@base/types';\nimport SigninScreen from '../components/SigninScreen';\nimport {\n  initializeSignin,\n  requestSignin,\n  signinError,\n} from '@base/modules/signin';\nimport { RootState } from '@base/modules';\nimport { ErrorMsg, ErrorText } from '@base/styles';\nimport Loading from '@base/components/loading';\n\nexport default function Signin({ route, navigation }: SigninProps) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { title, service, initial } = route.params;\n  const { error, loading } = useSelector((state: RootState) => state.signin);\n  const dispatch = useDispatch();\n\n  const handleEmailChange = (text: string) => {\n    setEmail(text);\n  };\n  const handlePasswordChange = (text: string) => {\n    setPassword(text);\n  };\n  const handleSigninPress = () => {\n    if (email.length === 0 || password.length === 0) {\n      dispatch(signinError('아이디 또는 비밀번호를 입력해주세요.'));\n      return;\n    }\n\n    const signinInfo = {\n      email,\n      password,\n    };\n\n    dispatch(requestSignin(signinInfo));\n  };\n  const handleSignupPress = () => {\n    navigation.navigate('Signup');\n  };\n\n  useEffect(() => {\n    const initializeWhenFirstSignin = () => {\n      if (initial) {\n        dispatch(initializeSignin(service));\n      }\n    };\n\n    initializeWhenFirstSignin();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {error ? (\n            <ErrorMsg>\n              <ErrorText>{error}</ErrorText>\n            </ErrorMsg>\n          ) : null}\n\n          <SigninScreen\n            title={title}\n            email={email}\n            password={password}\n            handleEmailChange={handleEmailChange}\n            handlePasswordChange={handlePasswordChange}\n            handleSignupPress={handleSignupPress}\n            handleSigninPress={handleSigninPress}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
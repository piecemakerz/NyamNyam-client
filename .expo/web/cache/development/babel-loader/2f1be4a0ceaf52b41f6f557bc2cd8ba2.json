{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar domain = 'http://10.0.2.2:4000';\nvar client = axios.create({\n  baseURL: domain + '/users',\n  method: 'post',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  responseType: 'json',\n  withCredentials: true\n});\n\nvar makeAuthHeaders = function makeAuthHeaders(acceesToken, refreshToken) {\n  var headers = {\n    'x-access-token': acceesToken\n  };\n  refreshToken ? headers['x-refresh-token'] = refreshToken : null;\n  return headers;\n};\n\nexport var signin = function signin(signinInfo) {\n  var res;\n  return _regeneratorRuntime.async(function signin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('before request signin ');\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.post('/login', JSON.stringify(signinInfo)));\n\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var confirmEmail = function confirmEmail(email) {\n  var res;\n  return _regeneratorRuntime.async(function confirmEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(client.post('/emailconfirm', JSON.stringify({\n            email: email\n          })));\n\n        case 2:\n          res = _context2.sent;\n          return _context2.abrupt(\"return\", res);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var requestSignup = function requestSignup(signupInfo) {\n  var res;\n  return _regeneratorRuntime.async(function requestSignup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('before reqest signup');\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(client.post('/signup', JSON.stringify(signupInfo)));\n\n        case 3:\n          res = _context3.sent;\n          console.log('request signup api: ', res);\n          return _context3.abrupt(\"return\", res);\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var refresh = function refresh(accessToken, refreshToken) {\n  var isUserdataRequired,\n      res,\n      _args4 = arguments;\n  return _regeneratorRuntime.async(function refresh$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          isUserdataRequired = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : false;\n          console.log('before refresh');\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(client.post('./token', {\n            headers: _objectSpread({}, makeAuthHeaders(accessToken, refreshToken)),\n            data: {\n              isUserdataRequired: isUserdataRequired\n            }\n          }));\n\n        case 4:\n          res = _context4.sent;\n          console.log('refresh res: ', res);\n          return _context4.abrupt(\"return\", res);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var checkToken = function checkToken(accessToken) {\n  var res;\n  return _regeneratorRuntime.async(function checkToken$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log('before token check');\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(client.post('/token/check', {\n            headers: _objectSpread({}, makeAuthHeaders(accessToken))\n          }));\n\n        case 3:\n          res = _context5.sent;\n          console.log('token check res:', res);\n          return _context5.abrupt(\"return\", res);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/api/auth.ts"],"names":["axios","domain","client","create","baseURL","method","headers","responseType","withCredentials","makeAuthHeaders","acceesToken","refreshToken","signin","signinInfo","console","log","post","JSON","stringify","res","confirmEmail","email","requestSignup","signupInfo","refresh","accessToken","isUserdataRequired","data","checkToken"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { SigninInfo, SignupInfo } from '@base/types/auth';\n\nconst domain = 'http://10.0.2.2:4000';\n//const domain = 'http://127.0.0.1:4000';\n\nconst client = axios.create({\n    baseURL: domain + '/users',\n    method: 'post',\n    headers:{ 'Content-Type': 'application/json'},\n    responseType: 'json',\n    withCredentials: true\n});\n\ntype RefreshToken = string | null | undefined;\n\nconst makeAuthHeaders = (acceesToken: string, refreshToken?: RefreshToken) => {\n    let headers: any =  {\n        'x-access-token': acceesToken,\n    };\n    refreshToken ? headers['x-refresh-token'] = refreshToken : null;\n\n    return headers;\n};\n\n\nexport const signin = async (signinInfo: SigninInfo) => {\n    console.log('before request signin ');\n    const res = await client.post('/login', JSON.stringify(signinInfo));\n\n    return res;\n};\n\nexport const confirmEmail = async (email: string) => {\n    const res = await client.post('/emailconfirm', JSON.stringify({ email }));\n\n    return res;\n};\n\nexport const requestSignup = async (signupInfo: SignupInfo) => {\n    console.log('before reqest signup');\n    const res = await client.post('/signup', JSON.stringify(signupInfo));\n    console.log('request signup api: ', res);\n    return res;\n};\n\nexport const refresh = async (accessToken: string, refreshToken: string, \n    isUserdataRequired: boolean = false) => {\n\n    console.log('before refresh');\n    const res = await client.post('./token', {\n        headers: {\n            ...makeAuthHeaders(accessToken, refreshToken)\n        },\n        data: {\n            isUserdataRequired\n        }\n    });\n    console.log('refresh res: ', res);\n    return res;\n}\n\nexport const checkToken = async (accessToken: string) => {\n    console.log('before token check');\n    const res = await client.post('/token/check', {\n        headers: {\n            ...makeAuthHeaders(accessToken)\n        }\n    });\n    console.log('token check res:', res);\n\n    return res;\n}"]},"metadata":{},"sourceType":"module"}
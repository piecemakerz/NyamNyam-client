{"ast":null,"code":"var _jsxFileName = \"/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Initial/containers/Initial.tsx\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport InitialScreen from \"../components/InitialScreen\";\nexport default function Initial(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state.signin;\n  }),\n      error = _useSelector.error,\n      service = _useSelector.service;\n\n  var handleStoreButtonPress = function handleStoreButtonPress() {\n    navigation.navigate('Signin', {\n      title: '사장님 로그인',\n      service: 'store',\n      initial: true\n    });\n  };\n\n  var handleCustomerButtonPress = function handleCustomerButtonPress() {\n    Alert.alert('알림', '서비스 준비 중 입니다.');\n  };\n\n  useEffect(function () {\n    console.log('initial rendered');\n\n    var navigateToSignin = function navigateToSignin() {\n      if (service && error) {\n        navigation.navigate('Signin', {\n          title: service === 'store' ? '사장님 로그인' : '고객 로그인',\n          service: service,\n          initial: false\n        });\n      }\n    };\n\n    navigateToSignin();\n  }, []);\n  return React.createElement(InitialScreen, {\n    handleStoreButtonPress: handleStoreButtonPress,\n    handleCustomerButtonPress: handleCustomerButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Initial/containers/Initial.tsx"],"names":["React","useEffect","useSelector","InitialScreen","Initial","navigation","state","signin","error","service","handleStoreButtonPress","navigate","title","initial","handleCustomerButtonPress","Alert","alert","console","log","navigateToSignin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,OAAOC,aAAP;AAGA,eAAe,SAASC,OAAT,OAA+C;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;;AAAA,qBACjCH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAsBA,KAAK,CAACC,MAA5B;AAAA,GAAD,CADsB;AAAA,MACpDC,KADoD,gBACpDA,KADoD;AAAA,MAC7CC,OAD6C,gBAC7CA,OAD6C;;AAG5D,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAY;AACzCL,IAAAA,UAAU,CAACM,QAAX,CAAoB,QAApB,EAA8B;AAC5BC,MAAAA,KAAK,EAAE,SADqB;AAE5BH,MAAAA,OAAO,EAAE,OAFmB;AAG5BI,MAAAA,OAAO,EAAE;AAHmB,KAA9B;AAKD,GAND;;AAQA,MAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAY;AAC5CC,IAAAA,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkB,eAAlB;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,YAAM;AAEdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,UAAGV,OAAO,IAAID,KAAd,EAAoB;AAClBH,QAAAA,UAAU,CAACM,QAAX,CAAoB,QAApB,EAA8B;AAC5BC,UAAAA,KAAK,EAAEH,OAAO,KAAK,OAAZ,GAAsB,SAAtB,GAAkC,QADb;AAE5BA,UAAAA,OAAO,EAAPA,OAF4B;AAG5BI,UAAAA,OAAO,EAAE;AAHmB,SAA9B;AAKD;AACF,KARD;;AAUAM,IAAAA,gBAAgB;AACjB,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACE,oBAAC,aAAD;AACE,IAAA,sBAAsB,EAAET,sBAD1B;AAEE,IAAA,yBAAyB,EAAEI,yBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert } from 'react-native';\n\nimport { InitialProps } from '@base/types';\nimport InitialScreen from '../components/InitialScreen';\nimport { RootState } from '@base/modules';\n\nexport default function Initial({ navigation }: InitialProps) {\n  const { error, service } = useSelector((state: RootState) => state.signin);\n\n  const handleStoreButtonPress = (): void => {\n    navigation.navigate('Signin', {\n      title: '사장님 로그인',\n      service: 'store',\n      initial: true\n    });\n  };\n\n  const handleCustomerButtonPress = (): void => {\n    Alert.alert('알림', '서비스 준비 중 입니다.');\n  };\n\n  useEffect(() => {\n    //resource api 인증 실패시, 자동으로 로그인 화면으로 이동 + 에러 메시지 보여주기\n    console.log('initial rendered');\n    const navigateToSignin = () => {\n      if(service && error){  //이전에 리소스 api 요청시 인증 실패했다면\n        navigation.navigate('Signin', {\n          title: service === 'store' ? '사장님 로그인' : '고객 로그인',\n          service,\n          initial: false\n        });\n      }\n    };\n\n    navigateToSignin();\n  }, [])\n\n  return (\n    <InitialScreen\n      handleStoreButtonPress={handleStoreButtonPress}\n      handleCustomerButtonPress={handleCustomerButtonPress}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}